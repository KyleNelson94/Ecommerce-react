{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyle.nelson\\\\Projects\\\\React\\\\design-shop\\\\src\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { ApolloProvider } from '@apollo/client'; // need to add a cart state\n\nimport withData from '../utils/withData';\n\nfunction MyApp({\n  Component,\n  apollo,\n  pageProps\n}) {\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  })));\n}\n\n_c = MyApp;\n\nMyApp.getInitialProps = async function ({\n  Component,\n  ctx\n}) {\n  console.log('***************   App Component   ****************');\n  console.log('Hello Component --------------->', Component);\n  console.log('Hello ctx --------------------->', ctx);\n  console.log('**************************************************');\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  } // this exposes the url params to the page component so we can use things like item ID in our queries\n\n\n  pageProps = ctx.query;\n  return {\n    pageProps\n  };\n};\n\nexport default _c2 = withData(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/kyle.nelson/Projects/React/design-shop/src/pages/_app.tsx"],"names":["React","ApolloProvider","withData","MyApp","Component","apollo","pageProps","getInitialProps","ctx","console","log","query"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,QAA+B,gBAA/B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AASA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAf,EAAiD;AAC/C,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;KANQH,K;;AAQTA,KAAK,CAACI,eAAN,GAAwB,gBAAe;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAf,EAA0C;AAEhEC,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDN,SAAhD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AAEA,MAAIJ,SAAS,GAAG,EAAhB;;AACA,MAAIF,SAAS,CAACG,eAAd,EAA+B;AAC7BD,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACG,eAAV,CAA0BC,GAA1B,CAAlB;AACD,GAV+D,CAWhE;;;AACAF,EAAAA,SAAS,GAAGE,GAAG,CAACG,KAAhB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACD,CAdD;;AAgBA,qBAAeJ,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import * as React from 'react';\r\nimport App from 'next/app';\r\nimport { ApolloProvider } from '@apollo/client';\r\n// need to add a cart state\r\nimport withData from '../utils/withData';\r\nimport Page from '../component/page';\r\n\r\n\r\ninterface Props {\r\n  Component: any;\r\n  ctx: object;\r\n  \r\n}\r\nfunction MyApp({ Component, apollo, pageProps }) {\r\n  return (\r\n    <ApolloProvider client={apollo}>\r\n      <Component {...pageProps} />\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nMyApp.getInitialProps = async function({ Component, ctx }: Props) {\r\n\r\n  console.log('***************   App Component   ****************');\r\n  console.log('Hello Component --------------->', Component);\r\n  console.log('Hello ctx --------------------->', ctx);\r\n  console.log('**************************************************');\r\n\r\n  let pageProps = {};\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  // this exposes the url params to the page component so we can use things like item ID in our queries\r\n  pageProps = ctx.query;\r\n  return { pageProps };\r\n};\r\n\r\nexport default withData(MyApp);"]},"metadata":{},"sourceType":"module"}