{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kyle.nelson\\\\Projects\\\\React\\\\design-shop\\\\src\\\\pages\\\\_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Page from '../component/page';\nimport '../../public/index.css';\nimport { useRouter } from 'next/router';\n;\ntoast.configure({\n  draggable: false,\n  autoClose: 5000\n});\n\nfunction MyApp({\n  Component,\n  apollo,\n  pageProps\n}) {\n  _s();\n\n  const router = useRouter();\n  React.useEffect(() => {\n    const handleRouteChange = url => {\n      console.log('App is changing to ----------------> ', url);\n    };\n\n    router.events.on('routeChangeStart', handleRouteChange); // If the component is unmounted, unsubscribe\n    // from the event with the `off` method:\n\n    return () => {\n      router.events.off('routeChangeStart', handleRouteChange);\n    };\n  }, []);\n  console.log('***************   App Component Render  ****************');\n  console.log('Hello Component --------------->', Component);\n  console.log('Hello Page props --------------------->', pageProps);\n  console.log('Hello Apollo --------------------->', apollo);\n  console.log('**************************************************');\n  return __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })));\n}\n\n_s(MyApp, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\n_c = MyApp;\n;\n\nMyApp.getInitialProps = async function ({\n  Component,\n  ctx\n}) {\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  } // this exposes the url params to the page component so we can use things like item ID in our queries\n\n\n  pageProps = ctx.query;\n  return {\n    pageProps\n  };\n};\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/kyle.nelson/Projects/React/design-shop/src/pages/_app.tsx"],"names":["React","toast","Page","useRouter","configure","draggable","autoClose","MyApp","Component","apollo","pageProps","router","useEffect","handleRouteChange","url","console","log","events","on","off","getInitialProps","ctx","query"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,wBAAP;AACA,SAASC,SAAT,QAA0B,aAA1B;AAQC;AAEDF,KAAK,CAACG,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,KADG;AAEdC,EAAAA,SAAS,EAAE;AAFG,CAAhB;;AAKA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAf,EAAuD;AAAA;;AACrD,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEAH,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,UAAMC,iBAAiB,GAAIC,GAAD,IAAS;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,GAArD;AACD,KAFD;;AAIAH,IAAAA,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,iBAArC,EALoB,CAOpB;AACA;;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACM,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,iBAAtC;AACD,KAFD;AAGD,GAZD,EAYG,EAZH;AAcAE,EAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDR,SAAhD;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDN,SAAvD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDP,MAAnD;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeN,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;GA3BQH,K;UACQJ,S;;;KADRI,K;AA2BR;;AAEDA,KAAK,CAACa,eAAN,GAAwB,gBAAe;AAAEZ,EAAAA,SAAF;AAAaa,EAAAA;AAAb,CAAf,EAA0C;AAEhE,MAAIX,SAAS,GAAG,EAAhB;;AACA,MAAIF,SAAS,CAACY,eAAd,EAA+B;AAC7BV,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACY,eAAV,CAA0BC,GAA1B,CAAlB;AACD,GAL+D,CAMhE;;;AACAX,EAAAA,SAAS,GAAGW,GAAG,CAACC,KAAhB;AACA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACD,CATD;;AAWA,eAAeH,KAAf","sourcesContent":["import * as React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Page from '../component/page';\r\nimport '../../public/index.css';\r\nimport { useRouter } from 'next/router';\r\nimport nProgress from 'nprogress';\r\n\r\ninterface Props {\r\n  Component: any;\r\n  ctx: any;\r\n  apollo: any;\r\n  pageProps: any;\r\n};\r\n\r\ntoast.configure({\r\n  draggable: false,\r\n  autoClose: 5000\r\n});\r\n\r\nfunction MyApp({ Component, apollo, pageProps }:Props) {\r\n  const router = useRouter();\r\n\r\n  React.useEffect(() => {\r\n    const handleRouteChange = (url) => {\r\n      console.log('App is changing to ----------------> ', url)\r\n    }\r\n\r\n    router.events.on('routeChangeStart', handleRouteChange)\r\n\r\n    // If the component is unmounted, unsubscribe\r\n    // from the event with the `off` method:\r\n    return () => {\r\n      router.events.off('routeChangeStart', handleRouteChange)\r\n    }\r\n  }, []);\r\n\r\n  console.log('***************   App Component Render  ****************');\r\n  console.log('Hello Component --------------->', Component);\r\n  console.log('Hello Page props --------------------->', pageProps);\r\n  console.log('Hello Apollo --------------------->', apollo);\r\n  console.log('**************************************************');\r\n  return (\r\n    <Page>\r\n      <Component {...pageProps} />\r\n    </Page>\r\n  );\r\n};\r\n\r\nMyApp.getInitialProps = async function({ Component, ctx }: Props) {\r\n\r\n  let pageProps = {};\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  // this exposes the url params to the page component so we can use things like item ID in our queries\r\n  pageProps = ctx.query;\r\n  return { pageProps };\r\n};\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}