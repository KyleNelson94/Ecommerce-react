{"ast":null,"code":"import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\nimport { onError } from '@apollo/link-error';\nimport { getDataFromTree } from '@apollo/react-ssr';\nimport withApollo from 'next-with-apollo';\n;\n\nfunction createClient({\n  headers,\n  initialState\n}) {\n  return new ApolloClient({\n    link: ApolloLink.from([onError(({\n      graphQLErrors,\n      networkError\n    }) => {\n      if (graphQLErrors) graphQLErrors.forEach(({\n        message,\n        locations,\n        path\n      }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`));\n      if (networkError) console.log(`[Network error]: ${networkError}. Backend is unreachable. Is it running?`);\n    })]),\n    cache: new InMemoryCache({}).restore(initialState || {})\n  });\n}\n\n;\nexport default withApollo(createClient, {\n  getDataFromTree\n});","map":{"version":3,"sources":["C:/Users/kyle.nelson/Projects/React/design-shop/src/utils/withData.ts"],"names":["ApolloClient","ApolloLink","InMemoryCache","onError","getDataFromTree","withApollo","createClient","headers","initialState","link","from","graphQLErrors","networkError","forEach","message","locations","path","console","log","cache","restore"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,QAAwD,gBAAxD;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAKC;;AAED,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAtB,EAAuD;AACrD,SAAO,IAAIR,YAAJ,CAAiB;AACtBS,IAAAA,IAAI,EAAER,UAAU,CAACS,IAAX,CAAgB,CACpBP,OAAO,CAAC,CAAC;AAAEQ,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAD,KAAqC;AAC3C,UAAID,aAAJ,EACEA,aAAa,CAACE,OAAd,CAAsB,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,SAAX;AAAsBC,QAAAA;AAAtB,OAAD,KACpBC,OAAO,CAACC,GAAR,CACG,6BAA4BJ,OAAQ,eAAcC,SAAU,WAAUC,IAAK,EAD9E,CADF;AAKF,UAAIJ,YAAJ,EACEK,OAAO,CAACC,GAAR,CACG,oBAAmBN,YAAa,0CADnC;AAGH,KAXM,CADa,CAAhB,CADgB;AAetBO,IAAAA,KAAK,EAAE,IAAIjB,aAAJ,CAAkB,EAAlB,EAAsBkB,OAAtB,CAA8BZ,YAAY,IAAI,EAA9C;AAfe,GAAjB,CAAP;AAiBD;;AAAA;AAED,eAAeH,UAAU,CAACC,YAAD,EAAe;AAAEF,EAAAA;AAAF,CAAf,CAAzB","sourcesContent":["import { ApolloClient, ApolloLink, InMemoryCache } from '@apollo/client';\r\nimport { onError } from '@apollo/link-error';\r\nimport { getDataFromTree } from '@apollo/react-ssr';\r\nimport withApollo from 'next-with-apollo';\r\n\r\ninterface Props {\r\n  headers: any;\r\n  initialState: any;\r\n};\r\n\r\nfunction createClient({ headers, initialState }:Props) {\r\n  return new ApolloClient({\r\n    link: ApolloLink.from([\r\n      onError(({ graphQLErrors, networkError }) => {\r\n        if (graphQLErrors)\r\n          graphQLErrors.forEach(({ message, locations, path }) =>\r\n            console.log(\r\n              `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n            )\r\n          );\r\n        if (networkError)\r\n          console.log(\r\n            `[Network error]: ${networkError}. Backend is unreachable. Is it running?`\r\n          );\r\n      }),\r\n    ]),\r\n    cache: new InMemoryCache({}).restore(initialState || {}),\r\n  });\r\n};\r\n\r\nexport default withApollo(createClient, { getDataFromTree });"]},"metadata":{},"sourceType":"module"}