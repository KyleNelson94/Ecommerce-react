{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kyle.nelson\\\\Projects\\\\React\\\\design-shop\\\\frontend\\\\src\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; //import Page from '@component/page/Page';\n\nimport { Router } from 'next/router';\nimport NProgress from 'nprogress';\nimport '../../public/nprogress.css';\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Page from '@component/page/Page';\n;\ntoast.configure({\n  draggable: false,\n  autoClose: 5000\n});\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', error => toast(error));\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\nfunction MyApp({\n  Component,\n  apollo,\n  pageProps\n}) {\n  console.log('***************   App Component Render  ****************');\n  console.log('Hello Component --------------->', Component);\n  console.log('Hello Page props --------------------->', pageProps);\n  console.log('Hello Apollo --------------------->', apollo);\n  console.log('**************************************************');\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\n;\n\nMyApp.getInitialProps = async function ({\n  Component,\n  ctx\n}) {\n  let pageProps = {};\n\n  if (Component.getInitialProps) {\n    pageProps = await Component.getInitialProps(ctx);\n  } // this exposes the url params to the page component so we can use things like item ID in our queries\n\n\n  pageProps = ctx.query;\n  return {\n    pageProps\n  };\n};\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/kyle.nelson/Projects/React/design-shop/frontend/src/pages/_app.tsx"],"names":["React","toast","Router","NProgress","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","Page","configure","draggable","autoClose","events","on","start","done","error","httpLink","uri","client","link","cache","MyApp","Component","apollo","pageProps","console","log","getInitialProps","ctx","query"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP,C,CACA;;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,4BAAP;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAOC;AAEDP,KAAK,CAACQ,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,KADG;AAEdC,EAAAA,SAAS,EAAE;AAFG,CAAhB;AAKAT,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMV,SAAS,CAACW,KAAV,EAA3C;AACAZ,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAyC,MAAMV,SAAS,CAACY,IAAV,EAA/C;AACAb,MAAM,CAACU,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAsCG,KAAD,IAAWf,KAAK,CAACe,KAAD,CAArD;AAEA,MAAMC,QAAQ,GAAGX,cAAc,CAAC;AAC9BY,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,SAASe,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAf,EAAuD;AAErDC,EAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDJ,SAAhD;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDF,SAAvD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDH,MAAnD;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACA,sBACE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAGR,MAAzB;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAhBQH,K;AAgBR;;AAEDA,KAAK,CAACM,eAAN,GAAwB,gBAAe;AAAEL,EAAAA,SAAF;AAAaM,EAAAA;AAAb,CAAf,EAA0C;AAEhE,MAAIJ,SAAS,GAAG,EAAhB;;AACA,MAAIF,SAAS,CAACK,eAAd,EAA+B;AAC7BH,IAAAA,SAAS,GAAG,MAAMF,SAAS,CAACK,eAAV,CAA0BC,GAA1B,CAAlB;AACD,GAL+D,CAMhE;;;AACAJ,EAAAA,SAAS,GAAGI,GAAG,CAACC,KAAhB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACD,CATD;;AAWA,eAAeH,KAAf","sourcesContent":["import * as React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import Page from '@component/page/Page';\r\nimport { Router } from 'next/router';\r\nimport NProgress from 'nprogress';\r\nimport '../../public/nprogress.css';\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport Page from '@component/page/Page';\r\n\r\ninterface Props {\r\n  Component: any;\r\n  ctx: any;\r\n  apollo: any;\r\n  pageProps: any;\r\n};\r\n\r\ntoast.configure({\r\n  draggable: false,\r\n  autoClose: 5000\r\n});\r\n\r\nRouter.events.on('routeChangeStart', () => NProgress.start());\r\nRouter.events.on('routeChangeComplete',  () => NProgress.done());\r\nRouter.events.on('routeChangeError', (error) => toast(error));\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:4000'\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nfunction MyApp({ Component, apollo, pageProps }:Props) {\r\n\r\n  console.log('***************   App Component Render  ****************');\r\n  console.log('Hello Component --------------->', Component);\r\n  console.log('Hello Page props --------------------->', pageProps);\r\n  console.log('Hello Apollo --------------------->', apollo);\r\n  console.log('**************************************************');\r\n  return (\r\n    <React.StrictMode>\r\n      <ApolloProvider client={ client }>\r\n        <Page>\r\n          <Component {...pageProps} />\r\n        </Page>\r\n      </ApolloProvider>\r\n    </React.StrictMode>\r\n  );\r\n};\r\n\r\nMyApp.getInitialProps = async function({ Component, ctx }: Props) {\r\n\r\n  let pageProps = {};\r\n  if (Component.getInitialProps) {\r\n    pageProps = await Component.getInitialProps(ctx);\r\n  }\r\n  // this exposes the url params to the page component so we can use things like item ID in our queries\r\n  pageProps = ctx.query;\r\n  return { pageProps };\r\n};\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}